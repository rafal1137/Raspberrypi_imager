# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Create a release image in chroot environment
        uses: pguyot/arm-runner-action@v2.5.1
        id: arm_runner_install
        with:
          image_additional_mb: 4096
          base_image: raspi_4_bullseye:20220121
          cpu: cortex-a53
          cpu_info: cpuinfo/raspberrypi_4b
          optimize_image: yes
          commands: |
            # Disable IPv6 in case it is configured but does not work
            ping6 -c 1 www.ietf.org || sysctl -w net.ipv6.conf.eth0.disable_ipv6=1
            apt-get update -y --allow-releaseinfo-change
            apt-get upgrade -y
            apt-get install -y build-essential libfreeimage-dev libopenal-dev libpango1.0-dev libsndfile-dev libudev-dev \
            libasound2-dev libjpeg62-turbo-dev libwebp-dev automake libgl1-mesa-glx libjpeg62-turbo libogg0 libopenal1 libvorbis0a \
            libvorbisfile3 zlib1g libx11-dev libglew-dev libegl1-mesa-dev \
            nasm autoconf git cmake zip gcc g++ libtool libxrandr-dev x11proto-randr-dev
            apt-get autoremove --purge -y
            apt-get clean

      - name: Compress the release image
        run: |
          mv ${{ steps.arm_runner_install.outputs.image }} rpi.img
          sudo xz -T 0 -v rpi.img

      - name: Upload the image artifact
        uses: actions/upload-artifact@v2
        with:
          name: rpi.img.xz
          path: rpi.img.xz
          if-no-files-found: error
          retention-days: 1

  create_release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [Build]
    steps:
      - name: Download the image artifacts
        uses: actions/download-artifact@v3.0.1

      - name: Create release with release image
        uses: "marvinpinto/action-automatic-releases@v1.1.2"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          draft: true
          title: Release
          files: rpi.img.xz
